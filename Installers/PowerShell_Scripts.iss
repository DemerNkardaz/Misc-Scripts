; Script generated by the Inno Script Studio Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!                                   

#define MSApplicationTitle "DN Misc Scripts"
#define MSApplicationPath "Nkardaz/Misc Scripts"
#define ApplicationVER "1.0"
#define PublisherTitle "Demer Nkardaz"
#define GitRepoURL "https://github.com/DemerNkardaz/Misc-Scripts"
#define GitAuthor "hhttps://github.com/DemerNkardaz"

[Files]
Source: "..\PowerShell\CurrentFiles.ps1"; DestDir: "{app}\ps1"; DestName: "Current_Files_List.ps1"; Components: PowerShell\CopyFileNames
Source: "..\PowerShell\CurrentFiles_Clip.ps1"; DestDir: "{app}\ps1"; DestName: "Current_Files_List_to_Clip.ps1"; Components: PowerShell\CopyFileNamesClip
Source: "..\PowerShell\CurrentFiles_WithoutFormat.ps1"; DestDir: "{app}\ps1"; DestName: "Current_Files_List_NoExt.ps1"; Components: PowerShell\CopyFileNamesNoExt
Source: "..\PowerShell\CurrentFiles_WithoutFormat_Clip.ps1"; DestDir: "{app}\ps1"; DestName: "Current_Files_List_to_Clip_NoExt.ps1"; Components: PowerShell\CopyFileNamesNoExtClip
Source: "..\PowerShell\CurrentFolders.ps1"; DestDir: "{app}\ps1"; DestName: "Current_Folders_List.ps1"; Components: PowerShell\CopyFolderNames
Source: "..\PowerShell\CurrentFolders_Clip.ps1"; DestDir: "{app}\ps1"; DestName: "Current_Folders_List_to_Clip.ps1"; Components: PowerShell\CopyFolderNamesClip
Source: "..\PowerShell\GenerateHTML_Lists.ps1"; DestDir: "{app}\ps1"; DestName: "Deep_HTML.ps1"; Components: PowerShell\CopyDeepToHTML
Source: "..\PowerShell\GenerateHTML_Lists_OutFileDirName.ps1"; DestDir: "{app}\ps1"; DestName: "Deep_HTML_CurrDir_Name.ps1"; Components: PowerShell\CopyDeepToHTMLDirName
Source: "..\PowerShell\GenerateHTML_Lists_Clip.ps1"; DestDir: "{app}\ps1"; DestName: "Deep_HTML_to_Clip.ps1"; Components: PowerShell\CopyDeepToHTMLClip
Source: "..\PowerShell\GenerateJSON_Lists.ps1"; DestDir: "{app}\ps1"; DestName: "Deep_JSON.ps1"; Components: PowerShell\CopyDeepToJSON
Source: "..\PowerShell\GenerateJSON_Lists_OutFileDirName.ps1"; DestDir: "{app}\ps1"; DestName: "Deep_JSON_CurrDir_Name.ps1"; Components: PowerShell\CopyDeepToJSONDirName
Source: "..\PowerShell\GenerateJSON_Lists_Clip.ps1"; DestDir: "{app}\ps1"; DestName: "Deep_JSON_to_Clip.ps1"; Components: PowerShell\CopyDeepToJSONClip
Source: "..\PowerShell\CreateFolders_by_Clip.ps1"; DestDir: "{app}\ps1"; DestName: "Create_Folders_from_Clip.ps1"; Components: PowerShell\FoldersFromClipboardData; Languages: english
Source: "..\PowerShell\CreateFolders_by_Clip_RU.ps1"; DestDir: "{app}\ps1"; DestName: "Create_Folders_from_Clip.ps1"; Components: PowerShell\FoldersFromClipboardData; Languages: russian
Source: "..\PowerShell\CreateFolders_by_ClipJSON.ps1"; DestDir: "{app}\ps1"; DestName: "Create_Folders_from_ClipJSON.ps1"; Components: PowerShell\FoldersFromClipboardJson; Languages: english
Source: "..\PowerShell\CreateFolders_by_ClipJSON_RU.ps1"; DestDir: "{app}\ps1"; DestName: "Create_Folders_from_ClipJSON.ps1"; Components: PowerShell\FoldersFromClipboardJson; Languages: russian
Source: "ru\readme.txt"; DestDir: "{app}"; Languages: russian
Source: "en\readme.txt"; DestDir: "{app}"; Languages: english
Source: "..\icos\PShell.ico"; DestDir: "{app}\ics"
Source: "..\icos\html.ico"; DestDir: "{app}\ics"
Source: "..\icos\JSON.ico"; DestDir: "{app}\ics"
Source: "..\icos\FolderAdd.ico"; DestDir: "{app}\ics"
Source: "..\icos\Clip.ico"; DestDir: "{app}\ics"
Source: "..\icos\ClipJSON.ico"; DestDir: "{app}\ics"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{F6C0B86D-2185-459D-B548-16391429601E}}
AppName={#MSApplicationTitle}
AppVersion={#ApplicationVER}
;AppVerName={#MSApplicationTitle} {#ApplicationVER}
AppPublisher={#PublisherTitle}
AppPublisherURL={#GitAuthor}
AppSupportURL={#GitRepoURL}
AppUpdatesURL={#GitRepoURL}
DefaultDirName={commonpf64}\{#MSApplicationPath}
DefaultGroupName={#MSApplicationTitle}
OutputBaseFilename=DN_Misc_Scripts_Setup
SetupIconFile=E:\OffWork\Misc-Scripts\Installers\appico\appico256.ico
WizardImageFile=E:\OffWork\Misc-Scripts\Installers\SideImage.bmp
Compression=lzma
SolidCompression=yes
DisableDirPage=no
DisableWelcomePage=False
ShowTasksTreeLines=True
WizardStyle=modern
WizardResizable=True
WizardSizePercent=110,150
AlwaysShowGroupOnReadyPage=True
AlwaysShowDirOnReadyPage=True
AllowNoIcons=True
VersionInfoVersion={#ApplicationVER}
VersionInfoCompany={#PublisherTitle}
VersionInfoTextVersion=1.0.0
VersionInfoProductName={#MSApplicationTitle}
VersionInfoProductVersion={#ApplicationVER}
VersionInfoProductTextVersion=DN Misc-Sripts
WizardSmallImageFile=E:\OffWork\Misc-Scripts\Installers\PersonalMonPart.bmp

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "russian"; MessagesFile: "compiler:Languages\Russian.isl"

[Icons]
Name: "{group}\{cm:UninstallProgram,{#MSApplicationTitle}}"; Filename: "{uninstallexe}"

[Registry]
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts"; ValueType: string; Flags: uninsdeletekey
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts"; ValueType: string; ValueName: "Icon"; ValueData: "pwsh.exe"
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts"; ValueType: string; ValueName: "MUIVerb"; ValueData: "PowerShell Scripts"; Languages: english
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts"; ValueType: string; ValueName: "MUIVerb"; ValueData: "PowerShell Скрипты"; Languages: russian
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts"; ValueType: string; ValueName: "SubCommands"
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\Powershell_00_CreateFolders"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\FolderAdd.ico"; Components: PowerShell\FoldersFromClipboardJson PowerShell\FoldersFromClipboardData
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\Powershell_00_CreateFolders"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Folders Creating Scripts"; Components: PowerShell\FoldersFromClipboardData PowerShell\FoldersFromClipboardJson; Languages: english
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\Powershell_00_CreateFolders"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Скрипты создания папок"; Components: PowerShell\FoldersFromClipboardData PowerShell\FoldersFromClipboardJson; Languages: russian
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\Powershell_00_CreateFolders"; ValueType: string; ValueName: "SubCommands"; Components: PowerShell\FoldersFromClipboardData PowerShell\FoldersFromClipboardJson
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\Powershell_00_CreateFolders\shell\PowerShell_CF_01_By_Clip"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\Clip.ico"; Components: PowerShell\FoldersFromClipboardData
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\Powershell_00_CreateFolders\shell\PowerShell_CF_01_By_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Create from Clipboard Data"; Components: PowerShell\FoldersFromClipboardData; Languages: english
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\Powershell_00_CreateFolders\shell\PowerShell_CF_01_By_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "На основе Буфера обмена"; Components: PowerShell\FoldersFromClipboardData; Languages: russian
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\Powershell_00_CreateFolders\shell\PowerShell_CF_01_By_Clip\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Create_Folders_from_Clip.ps1"" ""%V"""; Components: PowerShell\FoldersFromClipboardData
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\Powershell_00_CreateFolders\shell\PowerShell_CF_01_By_ClipJSON"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\ClipJSON.ico"; Components: PowerShell\FoldersFromClipboardJson
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\Powershell_00_CreateFolders\shell\PowerShell_CF_01_By_ClipJSON"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Create from Clipboard JSON-Table"; Components: PowerShell\FoldersFromClipboardJson; Languages: english
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\Powershell_00_CreateFolders\shell\PowerShell_CF_01_By_ClipJSON"; ValueType: string; ValueName: "MUIVerb"; ValueData: "На основе JSON-Таблице в Буфере обмена"; Components: PowerShell\FoldersFromClipboardJson; Languages: russian
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\Powershell_00_CreateFolders\shell\PowerShell_CF_01_By_ClipJSON\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Create_Folders_from_ClipJSON.ps1"" ""%V"""; Components: PowerShell\FoldersFromClipboardJson
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_01_GetFiles"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\PShell.ico"; Components: PowerShell\CopyFileNames
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_01_GetFiles"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Filenames"; Components: PowerShell\CopyFileNames; Languages: english
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_01_GetFiles"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить имена файлов"; Components: PowerShell\CopyFileNames; Languages: russian
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_01_GetFiles\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Current_Files_List.ps1"" ""%V"""; Components: PowerShell\CopyFileNames
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_01_GetFiles_Clip"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\PShell.ico"; Components: PowerShell\CopyFileNamesClip
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_01_GetFiles_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Filenames to Clipboard"; Components: PowerShell\CopyFileNamesClip; Languages: english
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_01_GetFiles_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить имена файлов в Буфер обмена"; Components: PowerShell\CopyFileNamesClip; Languages: russian
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_01_GetFiles_Clip\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Current_Files_List_to_Clip.ps1"" ""%V"""; Components: PowerShell\CopyFileNamesClip
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_02_GetFiles_NoExt"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\PShell.ico"; Components: PowerShell\CopyFileNamesNoExt
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_02_GetFiles_NoExt"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Filenames with no extensions"; Components: PowerShell\CopyFileNamesNoExt; Languages: english
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_02_GetFiles_NoExt"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить имена файлов без расширений"; Components: PowerShell\CopyFileNamesNoExt; Languages: russian
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_02_GetFiles_NoExt\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Current_Files_List_NoExt.ps1"" ""%V"""; Components: PowerShell\CopyFileNamesNoExt
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_02_GetFiles_NoExt_Clip"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\PShell.ico"; Components: PowerShell\CopyFileNamesNoExtClip
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_02_GetFiles_NoExt_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Filenames with no extensions to Clipboard"; Components: PowerShell\CopyFileNamesNoExtClip; Languages: english
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_02_GetFiles_NoExt_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить имена файлов без расширений в Буфер обмена"; Components: PowerShell\CopyFileNamesNoExtClip; Languages: russian
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_02_GetFiles_NoExt_Clip\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Current_Files_List_to_Clip_NoExt.ps1"" ""%V"""; Components: PowerShell\CopyFileNamesNoExtClip
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_03_GetFolders"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\PShell.ico"; Components: PowerShell\CopyFolderNames
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_03_GetFolders"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Folder Names"; Components: PowerShell\CopyFolderNames; Languages: english
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_03_GetFolders"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить имена папок"; Components: PowerShell\CopyFolderNames; Languages: russian
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_03_GetFolders\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Current_Folders_List.ps1"" ""%V"""; Components: PowerShell\CopyFolderNames
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_03_GetFolders_Clip"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\PShell.ico"; Components: PowerShell\CopyFolderNamesClip
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_03_GetFolders_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Folder Names to Clipboard"; Components: PowerShell\CopyFolderNamesClip; Languages: english
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_03_GetFolders_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить имена папок в Буфер обмена"; Components: PowerShell\CopyFolderNamesClip; Languages: russian
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_03_GetFolders_Clip\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Current_Folders_List_to_Clip.ps1"" ""%V"""; Components: PowerShell\CopyFolderNamesClip
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_04_HTMLList"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\html.ico"; Components: PowerShell\CopyDeepToHTML
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_04_HTMLList"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Structure as .html"; Components: PowerShell\CopyDeepToHTML; Languages: english
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_04_HTMLList"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить структуру как .html"; Components: PowerShell\CopyDeepToHTML; Languages: russian
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_04_HTMLList\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Deep_HTML.ps1"" ""%V"""; Components: PowerShell\CopyDeepToHTML
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_04_HTMLList_Clip"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\html.ico"; Components: PowerShell\CopyDeepToHTMLClip
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_04_HTMLList_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Structure as .html to Clipboard"; Components: PowerShell\CopyDeepToHTMLClip; Languages: english
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_04_HTMLList_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить структуру как .html в Буфер обмена"; Components: PowerShell\CopyDeepToHTMLClip; Languages: russian
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_04_HTMLList_Clip\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Deep_HTML_to_Clip.ps1"" ""%V"""; Components: PowerShell\CopyDeepToHTMLClip
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_04_HTMLList_OutFileDirName"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\html.ico"; Components: PowerShell\CopyDeepToHTMLDirName
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_04_HTMLList_OutFileDirName"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Structure as 'directory'.html"; Components: PowerShell\CopyDeepToHTMLDirName; Languages: english
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_04_HTMLList_OutFileDirName"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить структуру как 'директория'.html"; Components: PowerShell\CopyDeepToHTMLDirName; Languages: russian
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_04_HTMLList_OutFileDirName\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Deep_HTML_CurrDir_Name.ps1"" ""%V"""; Components: PowerShell\CopyDeepToHTMLDirName
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_05_JSONTable"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\JSON.ico"; Components: PowerShell\CopyDeepToJSON
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_05_JSONTable"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Structure as .JSON"; Components: PowerShell\CopyDeepToJSON; Languages: english
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_05_JSONTable"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить структуру как .JSON"; Components: PowerShell\CopyDeepToJSON; Languages: russian
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_05_JSONTable\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Deep_JSON.ps1"" ""%V"""; Components: PowerShell\CopyDeepToJSON
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_05_JSONTable_Clip"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\JSON.ico"; Components: PowerShell\CopyDeepToJSONClip
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_05_JSONTable_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Structure as .JSON to Clipboard"; Components: PowerShell\CopyDeepToJSONClip; Languages: english
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_05_JSONTable_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить структуру как .JSON в Буфер обмена"; Components: PowerShell\CopyDeepToJSONClip; Languages: russian
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_05_JSONTable_Clip\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Deep_JSON_to_Clip.ps1"" ""%V"""; Components: PowerShell\CopyDeepToJSONClip
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_05_JSONTable_OutFileDirName"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\JSON.ico"; Components: PowerShell\CopyDeepToJSONDirName
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_05_JSONTable_OutFileDirName"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Structure as 'directory'.JSON"; Languages: english
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_05_JSONTable_OutFileDirName"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить структуру как 'директория'.JSON"; Components: PowerShell\CopyDeepToJSONDirName; Languages: russian
Root: "HKCR"; Subkey: "Directory\Background\shell\PowerShellScripts\shell\PowerShell_05_JSONTable_OutFileDirName\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Deep_JSON_CurrDir_Name.ps1"" ""%V"""; Components: PowerShell\CopyDeepToJSONDirName
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts"; ValueType: string; Flags: uninsdeletekey
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts"; ValueType: string; ValueName: "Icon"; ValueData: "pwsh.exe"
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts"; ValueType: string; ValueName: "MUIVerb"; ValueData: "PowerShell Scripts"; Languages: english
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts"; ValueType: string; ValueName: "MUIVerb"; ValueData: "PowerShell Скрипты"; Languages: russian
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts"; ValueType: string; ValueName: "SubCommands"
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\Powershell_00_CreateFolders"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\FolderAdd.ico"; Components: PowerShell\FoldersFromClipboardJson PowerShell\FoldersFromClipboardData
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\Powershell_00_CreateFolders"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Folders Creating Scripts"; Components: PowerShell\FoldersFromClipboardData PowerShell\FoldersFromClipboardJson; Languages: english
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\Powershell_00_CreateFolders"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Скрипты создания папок"; Components: PowerShell\FoldersFromClipboardData PowerShell\FoldersFromClipboardJson; Languages: russian
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\Powershell_00_CreateFolders"; ValueType: string; ValueName: "SubCommands"; Components: PowerShell\FoldersFromClipboardData PowerShell\FoldersFromClipboardJson
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\Powershell_00_CreateFolders\shell\PowerShell_CF_01_By_Clip"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\Clip.ico"; Components: PowerShell\FoldersFromClipboardData
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\Powershell_00_CreateFolders\shell\PowerShell_CF_01_By_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Create from Clipboard Data"; Components: PowerShell\FoldersFromClipboardData; Languages: english
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\Powershell_00_CreateFolders\shell\PowerShell_CF_01_By_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "На основе Буфера обмена"; Components: PowerShell\FoldersFromClipboardData; Languages: russian
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\Powershell_00_CreateFolders\shell\PowerShell_CF_01_By_Clip\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Create_Folders_from_Clip.ps1"" ""%V"""; Components: PowerShell\FoldersFromClipboardData
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\Powershell_00_CreateFolders\shell\PowerShell_CF_01_By_ClipJSON"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\ClipJSON.ico"; Components: PowerShell\FoldersFromClipboardJson
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\Powershell_00_CreateFolders\shell\PowerShell_CF_01_By_ClipJSON"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Create from Clipboard JSON-Table"; Components: PowerShell\FoldersFromClipboardJson; Languages: english
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\Powershell_00_CreateFolders\shell\PowerShell_CF_01_By_ClipJSON"; ValueType: string; ValueName: "MUIVerb"; ValueData: "На основе JSON-Таблице в Буфере обмена"; Components: PowerShell\FoldersFromClipboardJson; Languages: russian
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\Powershell_00_CreateFolders\shell\PowerShell_CF_01_By_ClipJSON\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Create_Folders_from_ClipJSON.ps1"" ""%V"""; Components: PowerShell\FoldersFromClipboardJson
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_01_GetFiles"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\PShell.ico"; Components: PowerShell\CopyFileNames
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_01_GetFiles"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Filenames"; Components: PowerShell\CopyFileNames; Languages: english
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_01_GetFiles"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить имена файлов"; Components: PowerShell\CopyFileNames; Languages: russian
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_01_GetFiles\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Current_Files_List.ps1"" ""%V"""; Components: PowerShell\CopyFileNames
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_01_GetFiles_Clip"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\PShell.ico"; Components: PowerShell\CopyFileNamesClip
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_01_GetFiles_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Filenames to Clipboard"; Components: PowerShell\CopyFileNamesClip; Languages: english
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_01_GetFiles_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить имена файлов в Буфер обмена"; Components: PowerShell\CopyFileNamesClip; Languages: russian
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_01_GetFiles_Clip\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Current_Files_List_to_Clip.ps1"" ""%V"""; Components: PowerShell\CopyFileNamesClip
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_02_GetFiles_NoExt"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\PShell.ico"; Components: PowerShell\CopyFileNamesNoExt
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_02_GetFiles_NoExt"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Filenames with no extensions"; Components: PowerShell\CopyFileNamesNoExt; Languages: english
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_02_GetFiles_NoExt"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить имена файлов без расширений"; Components: PowerShell\CopyFileNamesNoExt; Languages: russian
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_02_GetFiles_NoExt\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Current_Files_List_NoExt.ps1"" ""%V"""; Components: PowerShell\CopyFileNamesNoExt
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_02_GetFiles_NoExt_Clip"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\PShell.ico"; Components: PowerShell\CopyFileNamesNoExtClip
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_02_GetFiles_NoExt_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Filenames with no extensions to Clipboard"; Components: PowerShell\CopyFileNamesNoExtClip; Languages: english
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_02_GetFiles_NoExt_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить имена файлов без расширений в Буфер обмена"; Components: PowerShell\CopyFileNamesNoExtClip; Languages: russian
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_02_GetFiles_NoExt_Clip\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Current_Files_List_to_Clip_NoExt.ps1"" ""%V"""; Components: PowerShell\CopyFileNamesNoExtClip
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_03_GetFolders"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\PShell.ico"; Components: PowerShell\CopyFolderNames
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_03_GetFolders"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Folder Names"; Components: PowerShell\CopyFolderNames; Languages: english
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_03_GetFolders"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить имена папок"; Components: PowerShell\CopyFolderNames; Languages: russian
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_03_GetFolders\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Current_Folders_List.ps1"" ""%V"""; Components: PowerShell\CopyFolderNames
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_03_GetFolders_Clip"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\PShell.ico"; Components: PowerShell\CopyFolderNamesClip
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_03_GetFolders_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Folder Names to Clipboard"; Components: PowerShell\CopyFolderNamesClip; Languages: english
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_03_GetFolders_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить имена папок в Буфер обмена"; Components: PowerShell\CopyFolderNamesClip; Languages: russian
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_03_GetFolders_Clip\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Current_Folders_List_to_Clip.ps1"" ""%V"""; Components: PowerShell\CopyFolderNamesClip
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_04_HTMLList"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\html.ico"; Components: PowerShell\CopyDeepToHTML
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_04_HTMLList"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Structure as .html"; Components: PowerShell\CopyDeepToHTML; Languages: english
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_04_HTMLList"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить структуру как .html"; Components: PowerShell\CopyDeepToHTML; Languages: russian
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_04_HTMLList\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Deep_HTML.ps1"" ""%V"""; Components: PowerShell\CopyDeepToHTML
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_04_HTMLList_Clip"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\html.ico"; Components: PowerShell\CopyDeepToHTMLClip
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_04_HTMLList_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Structure as .html to Clipboard"; Components: PowerShell\CopyDeepToHTMLClip; Languages: english
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_04_HTMLList_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить структуру как .html в Буфер обмена"; Components: PowerShell\CopyDeepToHTMLClip; Languages: russian
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_04_HTMLList_Clip\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Deep_HTML_to_Clip.ps1"" ""%V"""; Components: PowerShell\CopyDeepToHTMLClip
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_04_HTMLList_OutFileDirName"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\html.ico"; Components: PowerShell\CopyDeepToHTMLDirName
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_04_HTMLList_OutFileDirName"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Structure as 'directory'.html"; Components: PowerShell\CopyDeepToHTMLDirName; Languages: english
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_04_HTMLList_OutFileDirName"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить структуру как 'директория'.html"; Components: PowerShell\CopyDeepToHTMLDirName; Languages: russian
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_04_HTMLList_OutFileDirName\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Deep_HTML_CurrDir_Name.ps1"" ""%V"""; Components: PowerShell\CopyDeepToHTMLDirName
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_05_JSONTable"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\JSON.ico"; Components: PowerShell\CopyDeepToJSON
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_05_JSONTable"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Structure as .JSON"; Components: PowerShell\CopyDeepToJSON; Languages: english
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_05_JSONTable"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить структуру как .JSON"; Components: PowerShell\CopyDeepToJSON; Languages: russian
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_05_JSONTable\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Deep_JSON.ps1"" ""%V"""; Components: PowerShell\CopyDeepToJSON
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_05_JSONTable_Clip"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\JSON.ico"; Components: PowerShell\CopyDeepToJSONClip
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_05_JSONTable_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Structure as .JSON to Clipboard"; Components: PowerShell\CopyDeepToJSONClip; Languages: english
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_05_JSONTable_Clip"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить структуру как .JSON в Буфер обмена"; Components: PowerShell\CopyDeepToJSONClip; Languages: russian
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_05_JSONTable_Clip\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Deep_JSON_to_Clip.ps1"" ""%V"""; Components: PowerShell\CopyDeepToJSONClip
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_05_JSONTable_OutFileDirName"; ValueType: string; ValueName: "Icon"; ValueData: "{app}\ics\JSON.ico"; Components: PowerShell\CopyDeepToJSONDirName
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_05_JSONTable_OutFileDirName"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Get Structure as 'directory'.JSON"; Languages: english
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_05_JSONTable_OutFileDirName"; ValueType: string; ValueName: "MUIVerb"; ValueData: "Получить структуру как 'директория'.JSON"; Components: PowerShell\CopyDeepToJSONDirName; Languages: russian
Root: "HKCR"; Subkey: "Directory\shell\PowerShellScripts\shell\PowerShell_05_JSONTable_OutFileDirName\command"; ValueType: string; ValueData: """pwsh.exe"" -ExecutionPolicy RemoteSigned -File ""{app}\ps1\Deep_JSON_CurrDir_Name.ps1"" ""%V"""; Components: PowerShell\CopyDeepToJSONDirName



[Types]
Name: "Full"; Description: "PowerShell"; Flags: iscustom

[Components]
Name: "PowerShell"; Description: "PowerShell 7+ Scripts"; Types: Full; Languages: english
Name: "PowerShell"; Description: "PowerShell 7+ Скрипты"; Types: Full; Languages: russian
Name: "PowerShell\FoldersFromClipboardData"; Description: "Folders from Clipboard Data"; Types: Full; Languages: english
Name: "PowerShell\FoldersFromClipboardData"; Description: "Папки на основе Буфера обмена"; Types: Full; Languages: russian
Name: "PowerShell\FoldersFromClipboardJson"; Description: "Folders from Clipboard JSON"; Types: Full; Languages: english
Name: "PowerShell\FoldersFromClipboardJson"; Description: "Папки на основе JSON-Таблицы из Буфера обмена"; Types: Full; Languages: russian
Name: "PowerShell\CopyFileNames"; Description: "Copy filenames.ext in Current Directory to .txt"; Types: Full; Languages: english
Name: "PowerShell\CopyFileNames"; Description: "Копирование имён файлов в текущей директории в .txt"; Types: Full; Languages: russian
Name: "PowerShell\CopyFileNamesClip"; Description: "Copy filenames.ext in Current Directory to Clipboard"; Types: Full; Languages: english
Name: "PowerShell\CopyFileNamesClip"; Description: "Копирование имён файлов в текущей директории в Буфер обмена"; Types: Full; Languages: russian
Name: "PowerShell\CopyFileNamesNoExt"; Description: "Copy filenames in Current Directory to .txt"; Types: Full; Languages: english
Name: "PowerShell\CopyFileNamesNoExt"; Description: "↳ без расширений в .txt"; Types: Full; Languages: russian
Name: "PowerShell\CopyFileNamesNoExtClip"; Description: "Copy filenames in Current Directory to Clipboard"; Types: Full; Languages: english
Name: "PowerShell\CopyFileNamesNoExtClip"; Description: "↳ без расширений в Буфер обмена"; Types: Full; Languages: russian
Name: "PowerShell\CopyFolderNames"; Description: "Copy folder names in Current Directory to .txt"; Types: Full; Languages: english
Name: "PowerShell\CopyFolderNames"; Description: "Копирование имён папок в текущей директории в .txt"; Types: Full; Languages: russian
Name: "PowerShell\CopyFolderNamesClip"; Description: "Copy folder names in Current Directory to Clipboard"; Types: Full; Languages: english
Name: "PowerShell\CopyFolderNamesClip"; Description: "Копирование имён папок в текущей директории в Буфер обмена"; Types: Full; Languages: russian
Name: "PowerShell\CopyDeepToHTML"; Description: "Deep HTML list from Directory to .html"; Types: Full; Languages: english
Name: "PowerShell\CopyDeepToHTML"; Description: "Глубокий HTML список из директории в .html"; Types: Full; Languages: russian
Name: "PowerShell\CopyDeepToHTMLClip"; Description: "Deep HTML list from Directory to Clipboard"; Types: Full; Languages: english
Name: "PowerShell\CopyDeepToHTMLClip"; Description: "Глубокий HTML список из директории в Буфер обмена"; Types: Full; Languages: russian
Name: "PowerShell\CopyDeepToHTMLDirName"; Description: "Deep HTML list from Directory to 'directory'.html"; Types: Full; Languages: english
Name: "PowerShell\CopyDeepToHTMLDirName"; Description: "Глубокий HTML список из директории в 'директория'.html"; Types: Full; Languages: russian
Name: "PowerShell\CopyDeepToJSON"; Description: "Deep JSON-table from Directory to .json"; Types: Full; Languages: english
Name: "PowerShell\CopyDeepToJSON"; Description: "Глубокая JSON-таблица из директории в .json"; Types: Full; Languages: russian
Name: "PowerShell\CopyDeepToJSONClip"; Description: "Deep JSON-table from Directory to Clipboard"; Types: Full; Languages: english
Name: "PowerShell\CopyDeepToJSONClip"; Description: "Глубокая JSON-таблица из директории в Буфер обмена"; Types: Full; Languages: russian
Name: "PowerShell\CopyDeepToJSONDirName"; Description: "Deep JSON-table from Directory to 'directory'.json"; Types: Full; Languages: english
Name: "PowerShell\CopyDeepToJSONDirName"; Description: "Глубокая JSON-таблица из директории в 'директория'.json"; Types: Full; Languages: russian

[Run]
Filename: "{app}\readme.txt"; Flags: postinstall shellexec skipifsilent unchecked; Description: "Открыть README"; Languages: russian
Filename: "{app}\readme.txt"; Flags: postinstall shellexec skipifsilent unchecked; Description: "Open README"; Languages: english

[Messages]
WelcomeLabel1=[name/ver]
english.WelcomeLabel2=This package includes a set of PowerShell scripts that will be installed on the computer and registered in the registry for use through the context menu.%n%nRequires PowerShell 7 or higher. The setup program will prompt you to download and install it if not detected on your device.%n%nGit-Repo:%nhttps://github.com/DemerNkardaz/Misc-Scripts
russian.WelcomeLabel2=Данный пакет содержит в себе ряд скриптов PowerShell, которые будут установлены на компьютер и зарегистрированы в реестре для использования их через контекстное меню.%n%nТребуется версия PowerShell 7 и выше. Программа установки предложит вам скачать и установить её, если не обнаружит на устройстве.%n%nGit-Репозиторий:%nhttps://github.com/DemerNkardaz/Misc-Scripts
russian.FinishedHeadingLabel=[name] установлены%n
english.FinishedHeadingLabel=[name] installed%n
russian.FinishedLabel=Выбранные скрипты были установлены на ваш компьютер. Они могут быть запущены через контекстное меню проводника.
english.FinishedLabel=The selected scripts have been installed on your computer. They can be executed through the context menu of the file explorer.

[Code]
var
  InstallerPath: String;
  TempPath: String;
function IsPowerShell7Installed: Boolean;
var
  ResultCode: Integer;
begin
  Result := False;
  Exec(ExpandConstant('{cmd}'), '/C pwsh-preview.cmd -version', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);
  if ResultCode <> 0 then
    Exec(ExpandConstant('{cmd}'), '/C pwsh.exe -version', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);
  if ResultCode <> 0 then
    Exec(ExpandConstant('{cmd}'), '/C pwsh -version', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);
  
  Result := (ResultCode = 0);
end;
var
  LogFileName: String;
  LogForm: TForm;
  LogMemo: TMemo;

procedure ShowLogForm;
begin
  LogForm := TForm.Create(nil);
  case ActiveLanguage of
    'english': LogForm.Caption := 'Log of Downloading Progress';
    'russian': LogForm.Caption := 'Журнал прогресса скачивания';
  end;
  LogForm.Width := 400;
  LogForm.Height := 400;
  LogForm.Color := clBlack;
  LogMemo := TMemo.Create(LogForm);
  LogMemo.Parent := LogForm;
  LogMemo.Align := alClient;
  LogMemo.ReadOnly := True;
  LogMemo.Color := clBlack;
  LogMemo.Font.Color := clLime;
  LogForm.Show;
end;

function BytesToMegabytes(Bytes: Int64): Double;
begin
  Result := Bytes / 1024 / 1024;
end;

function InitializeSetup: Boolean;
begin
  LogFileName := ExpandConstant('{tmp}\install_log.txt');
  SaveStringToFile(LogFileName, '', False);
  Result := True;
end;

function OnDownloadProgress(const Url, Filename: string; const Progress, ProgressMax: Int64): Boolean;
var
  LogMessage: String;
  ProgressInMB: Double;
begin
  if not Assigned(LogForm) then
    ShowLogForm;
  if ProgressMax <> 0 then
    ProgressInMB := BytesToMegabytes(ProgressMax)
  else
    ProgressInMB := 0;
case ActiveLanguage of
  'english': LogMessage := Format('Downloaded:'#8195''#9'%.2f'#9''#9'|'#9'%.2f MB', [BytesToMegabytes(Progress), ProgressInMB]);
  'russian': LogMessage := Format('Скачано:'#8195''#9'%.2f'#9''#9'|'#9'%.2f МБ', [BytesToMegabytes(Progress), ProgressInMB]);
end;

  LogMemo.Lines.Add(LogMessage);
  SaveStringToFile(LogFileName, LogMessage + #13#10, True); 
  if BytesToMegabytes(Progress) = ProgressInMB then
    LogForm.Close;
  Result := True;
end;

function DownloadPS7: Boolean;
var
  ResultCode: Integer;
begin
  try
    TempPath := ExpandConstant('{tmp}');
    InstallerPath := TempPath + '\PShell750.msi';

    if not FileExists(InstallerPath) then
    begin
      DownloadTemporaryFile('https://github.com/PowerShell/PowerShell/releases/download/v7.5.0-preview.1/PowerShell-7.5.0-preview.1-win-x64.msi', 'PShell750.msi', '', @OnDownloadProgress);
    end;

    if FileExists(InstallerPath) then
    begin
      if not ShellExec('', InstallerPath, '', '', SW_SHOW, ewWaitUntilTerminated, ResultCode) then
      begin
        case ActiveLanguage of
          'english': MsgBox('Error installer launching: ' + IntToStr(ResultCode), mbError, MB_OK);
          'russian': MsgBox('Ошибка запуска установщика: ' + IntToStr(ResultCode), mbError, MB_OK);
        end;
        Result := False;
      end
      else
      begin
        Result := True;
      end;
    end
    else
    begin
      case ActiveLanguage of
        'english':
          MsgBox(
            'ERROR: PShell Installer was not found.',
            mbError, MB_OK
          );
        'russian':
          MsgBox(
            'ОШИБКА: Установщик PShell не был найден.',
            mbError, MB_OK
          );
      end;
      Result := False;
    end;
  except
    Result := False;
  end;
end;

procedure DeinitializeSetup;
var
  ResultCode: Integer;
begin
  try
    TempPath := ExpandConstant('{tmp}');
    InstallerPath := TempPath + '\PShell750.msi';
    if FileExists(InstallerPath) then
      DeleteFile(InstallerPath);
  except
  end;
end;

function NextButtonClick(CurPageID: Integer): Boolean;
begin
  TempPath := ExpandConstant('{tmp}');
  InstallerPath := TempPath + '\PShell750.msi';
  Result := True;
  if (CurPageID = wpSelectComponents) and IsComponentSelected('PowerShell') then
  begin
    if not IsPowerShell7Installed then
    begin
        if not FileExists(InstallerPath) then
        begin
            case ActiveLanguage of
              'english':
                Result := MsgBox(
                  'PowerShell 7 or later is required for this installation.' + #13#10 +
                  'Do you want to install PowerShell 7.5.0-preview now?' + #13#10 + #13#10 +
                  'The packe size is 104 MB, wait for it be dowloaded.' + #13#10,
                  mbError, MB_YESNO) = IDYES;
              'russian':
                Result := MsgBox(
                  'Для установки требуется PowerShell 7 или более поздняя версия.' + #13#10 +
                  'Установить PowerShell 7.5.0-preview прямо сейчас?' + #13#10 + #13#10 +
                  'Размер пакета составляет 104 МБ, дожитесь окончания скачивания.' + #13#10,
                  mbError, MB_YESNO) = IDYES;
            end;
        end
        else
        begin
            case ActiveLanguage of
              'english':
                Result := MsgBox(
                  'PowerShell 7 or later is required for this installation.' + #13#10 +
                  'You already done the PowerShell 7.5.0-preview downloading, want to launch?' + #13#10,
                  mbError, MB_YESNO) = IDYES;
              'russian':
                Result := MsgBox(
                  'Для установки требуется PowerShell 7 или более поздняя версия.' + #13#10 +
                  'Вы уже загрузили установщик PowerShell 7.5.0-preview, хотите его запустить?' + #13#10,
                  mbError, MB_YESNO) = IDYES;
            end;
        end;
      if Result then
      begin
        Result := DownloadPS7;
        Result := False;
      end;
    end;
  end;
end;

